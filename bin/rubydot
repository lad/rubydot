#!/usr/bin/env ruby
# encoding: UTF-8

require 'docopt'
require 'rubydot'
require 'logger'

SCRIPT = File.basename(__FILE__)

# rubocop: disable LineLength
DOC = <<DOCOPT
RubyDot - Simple UML Generator

Usage:
  #{SCRIPT} [-v] PATH [-o=OUTDIR] [-f=FORMAT]
  #{SCRIPT} --version

Options:
  -o OUTDIR, --output=OUTDIR    Output directory (defaults to $PWD)
  -f FORMAT, --format=FORMAT    Output format [default: dot]
  -h, --help                    Show this help
  -v, --verbose                 Show verbose output
  --version                     Show version
DOCOPT

# Application runner
class App
  def initialize(usage)
    @opts = Docopt.docopt(usage)
    @path = @opts['PATH']
    @log_level = @opts['--verbose'] ? Logger::DEBUG : Logger::INFO
    @output = @opts['--output']
  end

  def run
    if @opts['--version']
      puts Rubydot::VERSION
    else
      fail Errno::EEXIST, "#{output}" if File.exist?(output)
      Rubydot::App.new(@path).generate(output)
    end
  end

  def output
    @output ||= "#{File.basename(@path).partition('.')[0]}.png"
  end

  def self.main
    App.new(DOC).run
    return 0
  rescue Rubydot::Error, Docopt::Exit, Errno::EEXIST, Errno::ENOENT => e
    puts e.message
    return 1
  rescue StandardError => e
    puts e.message
    puts "\n"
    puts e.backtrace
    puts "\nAn unexpected error occurred. Please create a bug report at:"
    puts '    https://github.com/lad/rubydot/issues'
    puts 'and quote all of the above information.'
    return 1
  end
end

trap 'INT' do
  puts "\nInterrupted..."
  exit 1
end

exit App.main
